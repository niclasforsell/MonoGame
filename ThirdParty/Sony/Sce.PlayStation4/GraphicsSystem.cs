//----------------------------------------------------------------------------
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
//----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;

namespace Sce.PlayStation4
{
    namespace Graphics
    {
        public unsafe partial class GraphicsSystem : IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 80)]
            public struct Internal
            {
                [FieldOffset(8)]
                internal uint kCueRingEntries;

                [FieldOffset(12)]
                internal uint kDcbSizeInBytes;

                [FieldOffset(16)]
                internal uint kCcbSizeInBytes;

                [FieldOffset(20)]
                internal int _videoOutHandle;

                [FieldOffset(24)]
                internal void** _surfaceAddresses;

                [FieldOffset(40)]
                internal global::System.IntPtr _displayBuffers;

                [FieldOffset(48)]
                internal uint _backBufferIndex;

                [FieldOffset(56)]
                internal global::System.IntPtr _eopEventQueue;

                [FieldOffset(64)]
                internal uint _frameIndex;

                [FieldOffset(72)]
                internal global::System.IntPtr _currentRenderTarget;

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN8Graphics14GraphicsSystemC2Ev")]
                internal static extern void ctor_0(global::System.IntPtr instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN8Graphics14GraphicsSystemC2ERKS0_")]
                internal static extern void ctor_1(global::System.IntPtr instance, global::System.IntPtr _0);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN8Graphics14GraphicsSystemD2Ev")]
                internal static extern void dtor_0(global::System.IntPtr instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN8Graphics14GraphicsSystem10InitializeEv")]
                internal static extern void Initialize_0(global::System.IntPtr instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN8Graphics14GraphicsSystem15SetRenderTargetEPNS_12RenderTargetE")]
                internal static extern void SetRenderTarget_0(global::System.IntPtr instance, global::System.IntPtr renderTarget);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN8Graphics14GraphicsSystem5ClearEffff")]
                internal static extern void Clear_0(global::System.IntPtr instance, float r, float g, float b, float a);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN8Graphics14GraphicsSystem7PresentEv")]
                internal static extern void Present_0(global::System.IntPtr instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN8Graphics14GraphicsSystem21DrawIndexedPrimitivesENS_13PrimitiveTypeEiii")]
                internal static extern void DrawIndexedPrimitives_0(global::System.IntPtr instance, Graphics.PrimitiveType primitiveType, int baseVertex, int startIndex, int primitiveCount);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN8Graphics14GraphicsSystem14DrawPrimitivesENS_13PrimitiveTypeEii")]
                internal static extern void DrawPrimitives_0(global::System.IntPtr instance, Graphics.PrimitiveType primitiveType, int vertexStart, int vertexCount);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN8Graphics14GraphicsSystem10SetTextureEiPNS_7TextureE")]
                internal static extern void SetTexture_0(global::System.IntPtr instance, int slot, global::System.IntPtr texture);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN8Graphics14GraphicsSystem12SetTextureRTEiPNS_12RenderTargetE")]
                internal static extern void SetTextureRT_0(global::System.IntPtr instance, int slot, global::System.IntPtr target);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN8Graphics14GraphicsSystem11SetViewportEiiiiff")]
                internal static extern void SetViewport_0(global::System.IntPtr instance, int left, int top, int width, int height, float minDepth, float maxDepth);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN8Graphics14GraphicsSystem13SetBlendStateEPKc")]
                internal static extern void SetBlendState_0(global::System.IntPtr instance, global::System.IntPtr name);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN8Graphics14GraphicsSystem15SetVertexBufferEPNS_12VertexBufferE")]
                internal static extern void SetVertexBuffer_0(global::System.IntPtr instance, global::System.IntPtr buffer);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN8Graphics14GraphicsSystem14SetIndexBufferEPNS_11IndexBufferE")]
                internal static extern void SetIndexBuffer_0(global::System.IntPtr instance, global::System.IntPtr buffer);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN8Graphics14GraphicsSystem15SetVertexShaderEPNS_12VertexShaderE")]
                internal static extern void SetVertexShader_0(global::System.IntPtr instance, global::System.IntPtr shader);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN8Graphics14GraphicsSystem14SetPixelShaderEPNS_11PixelShaderE")]
                internal static extern void SetPixelShader_0(global::System.IntPtr instance, global::System.IntPtr shader);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN8Graphics14GraphicsSystem18SetShaderConstantsENS_11ShaderStageEPvj")]
                internal static extern void SetShaderConstants_0(global::System.IntPtr instance, Graphics.ShaderStage stage, void* data, uint sizeInBytes);
            }

            public global::System.IntPtr __Instance { get; protected set; }

            internal GraphicsSystem(GraphicsSystem.Internal* native)
                : this(new global::System.IntPtr(native))
            {
            }

            internal GraphicsSystem(GraphicsSystem.Internal native)
                : this(&native)
            {
            }

            public GraphicsSystem(global::System.IntPtr native)
            {
                __Instance = native;
            }

            public GraphicsSystem()
            {
                __Instance = Marshal.AllocHGlobal(80);
                Internal.ctor_0(__Instance);
            }

            ~GraphicsSystem()
            {
                Dispose(false);
            }

            public void Dispose()
            {
                Dispose(disposing: true);
                GC.SuppressFinalize(this);
            }

            protected virtual void Dispose(bool disposing)
            {
                Internal.dtor_0(__Instance);
                Marshal.FreeHGlobal(__Instance);
            }

            public virtual void Initialize()
            {
                Internal.Initialize_0(__Instance);
            }

            public virtual void SetRenderTarget(Graphics.RenderTarget renderTarget)
            {
                var arg0 = renderTarget == (Graphics.RenderTarget) null ? global::System.IntPtr.Zero : renderTarget.__Instance;
                Internal.SetRenderTarget_0(__Instance, arg0);
            }

            public virtual void Clear(float r, float g, float b, float a)
            {
                Internal.Clear_0(__Instance, r, g, b, a);
            }

            public virtual void Present()
            {
                Internal.Present_0(__Instance);
            }

            public virtual void DrawIndexedPrimitives(Graphics.PrimitiveType primitiveType, int baseVertex, int startIndex, int primitiveCount)
            {
                var arg0 = primitiveType;
                Internal.DrawIndexedPrimitives_0(__Instance, arg0, baseVertex, startIndex, primitiveCount);
            }

            public virtual void DrawPrimitives(Graphics.PrimitiveType primitiveType, int vertexStart, int vertexCount)
            {
                var arg0 = primitiveType;
                Internal.DrawPrimitives_0(__Instance, arg0, vertexStart, vertexCount);
            }

            public virtual void SetTexture(int slot, Graphics.Texture texture)
            {
                var arg1 = texture == (Graphics.Texture) null ? global::System.IntPtr.Zero : texture.__Instance;
                Internal.SetTexture_0(__Instance, slot, arg1);
            }

            public virtual void SetTextureRT(int slot, Graphics.RenderTarget target)
            {
                var arg1 = target == (Graphics.RenderTarget) null ? global::System.IntPtr.Zero : target.__Instance;
                Internal.SetTextureRT_0(__Instance, slot, arg1);
            }

            public virtual void SetViewport(int left, int top, int width, int height, float minDepth, float maxDepth)
            {
                Internal.SetViewport_0(__Instance, left, top, width, height, minDepth, maxDepth);
            }

            public virtual void SetBlendState(string name)
            {
                var arg0 = Marshal.StringToHGlobalAnsi(name);
                Internal.SetBlendState_0(__Instance, arg0);
                Marshal.FreeHGlobal(arg0);
            }

            public virtual void SetVertexBuffer(Graphics.VertexBuffer buffer)
            {
                var arg0 = buffer == (Graphics.VertexBuffer) null ? global::System.IntPtr.Zero : buffer.__Instance;
                Internal.SetVertexBuffer_0(__Instance, arg0);
            }

            public virtual void SetIndexBuffer(Graphics.IndexBuffer buffer)
            {
                var arg0 = buffer == (Graphics.IndexBuffer) null ? global::System.IntPtr.Zero : buffer.__Instance;
                Internal.SetIndexBuffer_0(__Instance, arg0);
            }

            public virtual void SetVertexShader(Graphics.VertexShader shader)
            {
                var arg0 = shader == (Graphics.VertexShader) null ? global::System.IntPtr.Zero : shader.__Instance;
                Internal.SetVertexShader_0(__Instance, arg0);
            }

            public virtual void SetPixelShader(Graphics.PixelShader shader)
            {
                var arg0 = shader == (Graphics.PixelShader) null ? global::System.IntPtr.Zero : shader.__Instance;
                Internal.SetPixelShader_0(__Instance, arg0);
            }

            public virtual void SetShaderConstants(Graphics.ShaderStage stage, void* data, uint sizeInBytes)
            {
                var arg0 = stage;
                var arg1 = data;
                var arg2 = sizeInBytes;
                Internal.SetShaderConstants_0(__Instance, arg0, arg1, arg2);
            }
        }
    }
}
