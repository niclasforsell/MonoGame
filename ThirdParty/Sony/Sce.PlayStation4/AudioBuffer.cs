//----------------------------------------------------------------------------
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
//----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;

namespace Sce.PlayStation4
{
    namespace Audio
    {
        public unsafe partial class AudioBuffer : IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 24)]
            public struct Internal
            {
                [FieldOffset(0)]
                internal void* _waveformData;

                [FieldOffset(8)]
                internal global::System.IntPtr _waveformInfo;

                [FieldOffset(16)]
                internal global::System.IntPtr _loopedWaveformInfo;

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Audio11AudioBufferC2EPvm")]
                internal static extern void ctor_0(global::System.IntPtr instance, void* data, uint dataSize);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Audio11AudioBufferC2EPvmiib")]
                internal static extern void ctor_1(global::System.IntPtr instance, void* data, uint dataSize, int numChannels, int blockAlign, bool isMSADPCM);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Audio11AudioBufferC2ERKS0_")]
                internal static extern void ctor_2(global::System.IntPtr instance, global::System.IntPtr _0);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Audio11AudioBufferD2Ev")]
                internal static extern void dtor_0(global::System.IntPtr instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Audio11AudioBuffer14MSADPCM_to_PCMEPvmiiPmPS1_")]
                internal static extern void MSADPCM_to_PCM_0(void* data, uint dataSize, int numChannels, int blockAlign, uint* outDataSize, void* outData);
            }

            public global::System.IntPtr __Instance { get; protected set; }

            internal AudioBuffer(AudioBuffer.Internal* native)
                : this(new global::System.IntPtr(native))
            {
            }

            internal AudioBuffer(AudioBuffer.Internal native)
                : this(&native)
            {
            }

            public AudioBuffer(global::System.IntPtr native)
            {
                __Instance = native;
            }

            public AudioBuffer(void* data, uint dataSize)
            {
                __Instance = Marshal.AllocHGlobal(24);
                var arg0 = data;
                var arg1 = dataSize;
                Internal.ctor_0(__Instance, arg0, arg1);
            }

            public AudioBuffer(void* data, uint dataSize, int numChannels, int blockAlign, bool isMSADPCM)
            {
                __Instance = Marshal.AllocHGlobal(24);
                var arg0 = data;
                var arg1 = dataSize;
                Internal.ctor_1(__Instance, arg0, arg1, numChannels, blockAlign, isMSADPCM);
            }

            public void Dispose()
            {
                Dispose(disposing: true);
                GC.SuppressFinalize(this);
            }

            protected virtual void Dispose(bool disposing)
            {
                Internal.dtor_0(__Instance);
                Marshal.FreeHGlobal(__Instance);
            }

            protected static void MSADPCM_to_PCM(void* data, uint dataSize, int numChannels, int blockAlign, uint* outDataSize, void* outData)
            {
                var arg0 = data;
                var arg1 = dataSize;
                var arg4 = outDataSize;
                var arg5 = outData;
                Internal.MSADPCM_to_PCM_0(arg0, arg1, numChannels, blockAlign, arg4, arg5);
            }
        }
    }
}
