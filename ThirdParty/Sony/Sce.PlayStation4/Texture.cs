//----------------------------------------------------------------------------
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
//----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;

namespace Sce_PlayStation4
{
    public unsafe partial class Texture : IDisposable, CppSharp.Runtime.ICppMarshal
    {
        [StructLayout(LayoutKind.Explicit, Size = 16)]
        public struct Internal
        {
            [SuppressUnmanagedCodeSecurity]
            [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN7TextureD2Ev")]
            internal static extern void dtor_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN7Texture7SetDataEPhj")]
            internal static extern void SetData_0(global::System.IntPtr instance, byte* data, uint bytes);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN7Texture8getWidthEv")]
            internal static extern uint getWidth_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN7Texture9getHeightEv")]
            internal static extern uint getHeight_0(global::System.IntPtr instance);
        }

        public global::System.IntPtr __Instance { get; protected set; }

        int CppSharp.Runtime.ICppMarshal.NativeDataSize
        {
            get { return 16; }
        }

        void CppSharp.Runtime.ICppMarshal.MarshalManagedToNative(global::System.IntPtr instance)
        {
        }

        void CppSharp.Runtime.ICppMarshal.MarshalNativeToManaged(global::System.IntPtr instance)
        {
        }

        internal Texture(Texture.Internal* native)
            : this(new global::System.IntPtr(native))
        {
        }

        internal Texture(Texture.Internal native)
            : this(&native)
        {
        }

        internal Texture(global::System.IntPtr native)
        {
            __Instance = native;
        }

        public void Dispose()
        {
            Dispose(disposing: true);
            GC.SuppressFinalize(this);
        }

        protected virtual void Dispose(bool disposing)
        {
            Internal.dtor_0(__Instance);
            Marshal.FreeHGlobal(__Instance);
        }

        public void SetData(byte* data, uint bytes)
        {
            var arg0 = data;
            var arg1 = bytes;
            Internal.SetData_0(__Instance, arg0, arg1);
        }

        public uint width
        {
            get
            {
                var __ret = Internal.getWidth_0(__Instance);
                return __ret;
            }
        }

        public uint height
        {
            get
            {
                var __ret = Internal.getHeight_0(__Instance);
                return __ret;
            }
        }
    }
}
