//----------------------------------------------------------------------------
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
//----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;

namespace Sce.PlayStation4
{
    namespace Audio
    {
        public enum SoundState
        {
            Playing = 0,
            Paused = 1,
            Stopped = 2
        }

        public unsafe partial class SamplerVoice : IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 48)]
            public struct Internal
            {
                [FieldOffset(0)]
                internal uint _rackHandle;

                [FieldOffset(8)]
                internal uint _voiceHandle;

                [FieldOffset(16)]
                internal uint _voiceHandleID;

                [FieldOffset(20)]
                internal float _pitch;

                [FieldOffset(24)]
                internal float _pan;

                [FieldOffset(28)]
                internal float _volume;

                [FieldOffset(32)]
                internal bool _looped;

                [FieldOffset(40)]
                internal global::System.IntPtr _buffer;

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Audio12SamplerVoiceC2EjmmPNS_11AudioBufferE")]
                internal static extern void ctor_0(global::System.IntPtr instance, uint id, uint rackHandle, uint voiceHandle, global::System.IntPtr buffer);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Audio12SamplerVoiceC2ERKS0_")]
                internal static extern void ctor_1(global::System.IntPtr instance, global::System.IntPtr _0);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Audio12SamplerVoiceD2Ev")]
                internal static extern void dtor_0(global::System.IntPtr instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Audio12SamplerVoice7SetFadeEff")]
                internal static extern void SetFade_0(global::System.IntPtr instance, float fadeinTime, float fadeOutTime);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Audio12SamplerVoice9GetVolumeEv")]
                internal static extern float Volume_0(global::System.IntPtr instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Audio12SamplerVoice9SetVolumeEf")]
                internal static extern void SetVolume_0(global::System.IntPtr instance, float newVol);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Audio12SamplerVoice9GetLoopedEv")]
                [return: MarshalAsAttribute(UnmanagedType.I1)]
                internal static extern bool Looped_0(global::System.IntPtr instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Audio12SamplerVoice9SetLoopedEb")]
                internal static extern void SetLooped_0(global::System.IntPtr instance, bool loop);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Audio12SamplerVoice6GetPanEv")]
                internal static extern float Pan_0(global::System.IntPtr instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Audio12SamplerVoice6SetPanEf")]
                internal static extern void SetPan_0(global::System.IntPtr instance, float pan);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Audio12SamplerVoice8GetPitchEv")]
                internal static extern float Pitch_0(global::System.IntPtr instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Audio12SamplerVoice8SetPitchEf")]
                internal static extern void SetPitch_0(global::System.IntPtr instance, float pitch);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Audio12SamplerVoice8GetStateEv")]
                internal static extern Audio.SoundState GetState_0(global::System.IntPtr instance);
            }

            public global::System.IntPtr __Instance { get; protected set; }

            internal SamplerVoice(SamplerVoice.Internal* native)
                : this(new global::System.IntPtr(native))
            {
            }

            internal SamplerVoice(SamplerVoice.Internal native)
                : this(&native)
            {
            }

            public SamplerVoice(global::System.IntPtr native)
            {
                __Instance = native;
            }

            protected SamplerVoice(uint id, uint rackHandle, uint voiceHandle, Audio.AudioBuffer buffer)
            {
                __Instance = Marshal.AllocHGlobal(48);
                var arg1 = rackHandle;
                var arg2 = voiceHandle;
                var arg3 = buffer == (Audio.AudioBuffer) null ? global::System.IntPtr.Zero : buffer.__Instance;
                Internal.ctor_0(__Instance, id, arg1, arg2, arg3);
            }

            ~SamplerVoice()
            {
                Dispose(false);
            }

            public void Dispose()
            {
                Dispose(disposing: true);
                GC.SuppressFinalize(this);
            }

            protected virtual void Dispose(bool disposing)
            {
                Internal.dtor_0(__Instance);
                Marshal.FreeHGlobal(__Instance);
            }

            public void SetFade(float fadeinTime, float fadeOutTime)
            {
                Internal.SetFade_0(__Instance, fadeinTime, fadeOutTime);
            }

            protected uint _rackHandle
            {
                get
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    return __ptr->_rackHandle;
                }

                set
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    __ptr->_rackHandle = value;
                }
            }

            protected uint _voiceHandle
            {
                get
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    return __ptr->_voiceHandle;
                }

                set
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    __ptr->_voiceHandle = value;
                }
            }

            protected uint _voiceHandleID
            {
                get
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    return __ptr->_voiceHandleID;
                }

                set
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    __ptr->_voiceHandleID = value;
                }
            }

            protected float _pitch
            {
                get
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    return __ptr->_pitch;
                }

                set
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    __ptr->_pitch = value;
                }
            }

            protected float _pan
            {
                get
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    return __ptr->_pan;
                }

                set
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    __ptr->_pan = value;
                }
            }

            protected float _volume
            {
                get
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    return __ptr->_volume;
                }

                set
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    __ptr->_volume = value;
                }
            }

            protected bool _looped
            {
                get
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    return __ptr->_looped;
                }

                set
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    __ptr->_looped = value;
                }
            }

            protected Audio.AudioBuffer _buffer
            {
                get
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    var __copy = new global::System.IntPtr(&__ptr->_buffer);
                    return new Audio.AudioBuffer(__copy);
                }

                set
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    __ptr->_buffer = value == (Audio.AudioBuffer) null ? global::System.IntPtr.Zero : value.__Instance;
                }
            }

            public float Volume
            {
                get
                {
                    var __ret = Internal.Volume_0(__Instance);
                    return __ret;
                }

                set
                {
                    Internal.SetVolume_0(__Instance, value);
                }
            }

            public bool Looped
            {
                get
                {
                    var __ret = Internal.Looped_0(__Instance);
                    return __ret;
                }

                set
                {
                    Internal.SetLooped_0(__Instance, value);
                }
            }

            public float Pan
            {
                get
                {
                    var __ret = Internal.Pan_0(__Instance);
                    return __ret;
                }

                set
                {
                    Internal.SetPan_0(__Instance, value);
                }
            }

            public float Pitch
            {
                get
                {
                    var __ret = Internal.Pitch_0(__Instance);
                    return __ret;
                }

                set
                {
                    Internal.SetPitch_0(__Instance, value);
                }
            }

            public Audio.SoundState State
            {
                get
                {
                    var __ret = Internal.GetState_0(__Instance);
                    return __ret;
                }
            }
        }
    }
}
