//----------------------------------------------------------------------------
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
//----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;

namespace Sce.PlayStation4
{
    namespace Audio
    {
        public unsafe partial class SoundSystem : IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 112)]
            public struct Internal
            {
                [FieldOffset(0)]
                internal uint _currentVoiceHandle;

                [FieldOffset(8)]
                internal uint _systemHandle;

                [FieldOffset(16)]
                internal uint _masteringRackHandle;

                [FieldOffset(24)]
                internal uint _samplerRackHandle;

                [FieldOffset(32)]
                internal uint _masteringVoiceHandle;

                [FieldOffset(40)]
                internal fixed uint _masteringPadVoiceHandle[4];

                [FieldOffset(72)]
                internal global::System.IntPtr m_audioOut;

                [FieldOffset(80)]
                internal fixed int m_padPort[4];

                [FieldOffset(96)]
                internal void* _freeVoiceIDs;

                [FieldOffset(104)]
                internal uint MAX_VOICES;

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Audio11SoundSystemC2ERKS0_")]
                internal static extern void ctor_1(global::System.IntPtr instance, global::System.IntPtr _0);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Audio11SoundSystemD2Ev")]
                internal static extern void dtor_0(global::System.IntPtr instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Audio11SoundSystem12DestroyVoiceEPNS_12SamplerVoiceE")]
                internal static extern void DestroyVoice_0(global::System.IntPtr instance, global::System.IntPtr voice);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Audio11SoundSystem11CreateVoiceEPNS_11AudioBufferE")]
                internal static extern global::System.IntPtr CreateVoice_0(global::System.IntPtr instance, global::System.IntPtr buffer);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Audio11SoundSystem10InitializeEv")]
                internal static extern void Initialize_0(global::System.IntPtr instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Audio11SoundSystem19SubmitPlaybackEventEPNS_12SamplerVoiceEPNS_11AudioBufferEii")]
                internal static extern void SubmitPlaybackEvent_0(global::System.IntPtr instance, global::System.IntPtr voiceHandle, global::System.IntPtr buffer, int evt, int portHandle);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Audio11SoundSystem18OpenControllerPortEij")]
                internal static extern void OpenControllerPort_0(global::System.IntPtr instance, int playerIdx, uint userID);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Audio11SoundSystem19CloseControllerPortEi")]
                internal static extern void CloseControllerPort_0(global::System.IntPtr instance, int playerIdx);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Audio11SoundSystem8InstanceEv")]
                internal static extern global::System.IntPtr Instance_0();
            }

            public global::System.IntPtr __Instance { get; protected set; }

            internal SoundSystem(SoundSystem.Internal* native)
                : this(new global::System.IntPtr(native))
            {
            }

            internal SoundSystem(SoundSystem.Internal native)
                : this(&native)
            {
            }

            public SoundSystem(global::System.IntPtr native)
            {
                __Instance = native;
            }

            public void Dispose()
            {
                Dispose(disposing: true);
                GC.SuppressFinalize(this);
            }

            protected virtual void Dispose(bool disposing)
            {
                Internal.dtor_0(__Instance);
                Marshal.FreeHGlobal(__Instance);
            }

            public void DestroyVoice(Audio.SamplerVoice voice)
            {
                var arg0 = voice == (Audio.SamplerVoice) null ? global::System.IntPtr.Zero : voice.__Instance;
                Internal.DestroyVoice_0(__Instance, arg0);
            }

            public Audio.SamplerVoice CreateVoice(Audio.AudioBuffer buffer)
            {
                var arg0 = buffer == (Audio.AudioBuffer) null ? global::System.IntPtr.Zero : buffer.__Instance;
                var __ret = Internal.CreateVoice_0(__Instance, arg0);
                if (__ret == global::System.IntPtr.Zero) return null;
                return new Audio.SamplerVoice(__ret);
            }

            public void Initialize()
            {
                Internal.Initialize_0(__Instance);
            }

            public void SubmitPlaybackEvent(Audio.SamplerVoice voiceHandle, Audio.AudioBuffer buffer, int evt, int portHandle)
            {
                var arg0 = voiceHandle == (Audio.SamplerVoice) null ? global::System.IntPtr.Zero : voiceHandle.__Instance;
                var arg1 = buffer == (Audio.AudioBuffer) null ? global::System.IntPtr.Zero : buffer.__Instance;
                Internal.SubmitPlaybackEvent_0(__Instance, arg0, arg1, evt, portHandle);
            }

            public void OpenControllerPort(int playerIdx, uint userID)
            {
                var arg1 = userID;
                Internal.OpenControllerPort_0(__Instance, playerIdx, arg1);
            }

            public void CloseControllerPort(int playerIdx)
            {
                Internal.CloseControllerPort_0(__Instance, playerIdx);
            }

            public uint MAX_VOICES
            {
                get
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    return __ptr->MAX_VOICES;
                }
            }

            public static Audio.SoundSystem Instance
            {
                get
                {
                    var __ret = Internal.Instance_0();
                    if (__ret == global::System.IntPtr.Zero) return null;
                    return new Audio.SoundSystem(__ret);
                }
            }
        }
    }
}
