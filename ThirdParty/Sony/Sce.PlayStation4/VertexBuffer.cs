//----------------------------------------------------------------------------
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
//----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;

namespace Sce.PlayStation4
{
    namespace Graphics
    {
        public enum VertexElement : uint
        {
            VertexElement_Single = 0,
            VertexElement_Vector2 = 1,
            VertexElement_Vector3 = 2,
            VertexElement_Vector4 = 3,
            VertexElement_Color = 4,
            VertexElement_Byte4 = 5,
            VertexElement_Short2 = 6,
            VertexElement_Short4 = 7,
            VertexElement_NormalizedShort2 = 8,
            VertexElement_NormalizedShort4 = 9,
            VertexElement_HalfVector2 = 10,
            VertexElement_HalfVector4 = 11
        }

        public unsafe partial class VertexBuffer : IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 32)]
            public struct Internal
            {
                [FieldOffset(8)]
                internal void* _bufferData;

                [FieldOffset(16)]
                internal uint _bufferCount;

                [FieldOffset(24)]
                internal global::System.IntPtr _buffers;

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN8Graphics12VertexBufferC2EPiiii")]
                internal static extern void ctor_2(global::System.IntPtr instance, int* elements, int elementCount, int vertexStride, int vertexCount);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN8Graphics12VertexBufferD2Ev")]
                internal static extern void dtor_0(global::System.IntPtr instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN8Graphics12VertexBuffer7SetDataEjPhj")]
                internal static extern void SetData_0(global::System.IntPtr instance, uint offsetInBytes, byte* data, uint bytes);
            }

            public global::System.IntPtr __Instance { get; protected set; }

            internal VertexBuffer(VertexBuffer.Internal* native)
                : this(new global::System.IntPtr(native))
            {
            }

            internal VertexBuffer(VertexBuffer.Internal native)
                : this(&native)
            {
            }

            public VertexBuffer(global::System.IntPtr native)
            {
                __Instance = native;
            }

            public VertexBuffer(int* elements, int elementCount, int vertexStride, int vertexCount)
            {
                __Instance = Marshal.AllocHGlobal(32);
                var arg0 = elements;
                var arg1 = elementCount;
                var arg2 = vertexStride;
                var arg3 = vertexCount;
                Internal.ctor_2(__Instance, arg0, arg1, arg2, arg3);
            }

            ~VertexBuffer()
            {
                Dispose(false);
            }

            public void Dispose()
            {
                Dispose(disposing: true);
                GC.SuppressFinalize(this);
            }

            protected virtual void Dispose(bool disposing)
            {
                Internal.dtor_0(__Instance);
                Marshal.FreeHGlobal(__Instance);
            }

            public virtual void SetData(uint offsetInBytes, byte* data, uint bytes)
            {
                var arg0 = offsetInBytes;
                var arg1 = data;
                var arg2 = bytes;
                Internal.SetData_0(__Instance, arg0, arg1, arg2);
            }
        }
    }
}
