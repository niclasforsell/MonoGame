//----------------------------------------------------------------------------
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
//----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;

namespace Sce.PlayStation4
{
    namespace Input
    {
        public unsafe partial struct GamePadState
        {
            [StructLayout(LayoutKind.Explicit, Size = 36)]
            public struct Internal
            {
                [FieldOffset(0)]
                internal bool IsConnected;

                [FieldOffset(4)]
                internal int PacketNumber;

                [FieldOffset(8)]
                internal float LeftStickX;

                [FieldOffset(12)]
                internal float LeftStickY;

                [FieldOffset(16)]
                internal float RightStickX;

                [FieldOffset(20)]
                internal float RightStickY;

                [FieldOffset(24)]
                internal float LeftTrigger;

                [FieldOffset(28)]
                internal float RightTrigger;

                [FieldOffset(32)]
                internal uint Buttons;

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Input12GamePadStateC2ERKS0_")]
                internal static extern void ctor_1(global::System.IntPtr instance, global::System.IntPtr _0);
            }

            internal GamePadState(GamePadState.Internal* native)
                : this(new global::System.IntPtr(native))
            {
            }

            internal GamePadState(GamePadState.Internal native)
                : this(&native)
            {
            }

            public GamePadState(global::System.IntPtr native) : this()
            {
                var __ptr = (Internal*)native.ToPointer();
                IsConnected = __ptr->IsConnected;
                PacketNumber = __ptr->PacketNumber;
                LeftStickX = __ptr->LeftStickX;
                LeftStickY = __ptr->LeftStickY;
                RightStickX = __ptr->RightStickX;
                RightStickY = __ptr->RightStickY;
                LeftTrigger = __ptr->LeftTrigger;
                RightTrigger = __ptr->RightTrigger;
                Buttons = __ptr->Buttons;
            }

            internal Internal ToInternal()
            {
                var __native = new Sce.PlayStation4.Input.GamePadState.Internal();
                var __ptr = &__native;
                __native.IsConnected = IsConnected;
                __native.PacketNumber = PacketNumber;
                __native.LeftStickX = LeftStickX;
                __native.LeftStickY = LeftStickY;
                __native.RightStickX = RightStickX;
                __native.RightStickY = RightStickY;
                __native.LeftTrigger = LeftTrigger;
                __native.RightTrigger = RightTrigger;
                __native.Buttons = Buttons;
                return __native;
            }

            internal void FromInternal(Internal* native)
            {
                var __ptr = native;
                IsConnected = __ptr->IsConnected;
                PacketNumber = __ptr->PacketNumber;
                LeftStickX = __ptr->LeftStickX;
                LeftStickY = __ptr->LeftStickY;
                RightStickX = __ptr->RightStickX;
                RightStickY = __ptr->RightStickY;
                LeftTrigger = __ptr->LeftTrigger;
                RightTrigger = __ptr->RightTrigger;
                Buttons = __ptr->Buttons;
            }

            public bool IsConnected
            {
                get;

                set
                ;
            }

            public int PacketNumber
            {
                get;

                set
                ;
            }

            public float LeftStickX
            {
                get;

                set
                ;
            }

            public float LeftStickY
            {
                get;

                set
                ;
            }

            public float RightStickX
            {
                get;

                set
                ;
            }

            public float RightStickY
            {
                get;

                set
                ;
            }

            public float LeftTrigger
            {
                get;

                set
                ;
            }

            public float RightTrigger
            {
                get;

                set
                ;
            }

            public uint Buttons
            {
                get;

                set
                ;
            }
        }
    }
}
